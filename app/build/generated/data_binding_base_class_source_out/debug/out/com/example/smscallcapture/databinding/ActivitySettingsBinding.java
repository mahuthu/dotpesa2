// Generated by view binder compiler. Do not edit!
package com.example.smscallcapture.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ScrollView;
import android.widget.Spinner;
import android.widget.Switch;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smscallcapture.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySettingsBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button buttonClearUrl;

  @NonNull
  public final Button buttonTestConnection;

  @NonNull
  public final EditText editBranchId;

  @NonNull
  public final EditText editHost;

  @NonNull
  public final EditText editInterval;

  @NonNull
  public final EditText editModemId;

  @NonNull
  public final EditText editPort;

  @NonNull
  public final Spinner spinnerProtocol;

  @NonNull
  public final Switch switchSoundReceive;

  @NonNull
  public final Switch switchSoundUpload;

  @NonNull
  public final Switch switchToasts;

  @NonNull
  public final TextView textBaseUrl;

  private ActivitySettingsBinding(@NonNull ScrollView rootView, @NonNull Button buttonClearUrl,
      @NonNull Button buttonTestConnection, @NonNull EditText editBranchId,
      @NonNull EditText editHost, @NonNull EditText editInterval, @NonNull EditText editModemId,
      @NonNull EditText editPort, @NonNull Spinner spinnerProtocol,
      @NonNull Switch switchSoundReceive, @NonNull Switch switchSoundUpload,
      @NonNull Switch switchToasts, @NonNull TextView textBaseUrl) {
    this.rootView = rootView;
    this.buttonClearUrl = buttonClearUrl;
    this.buttonTestConnection = buttonTestConnection;
    this.editBranchId = editBranchId;
    this.editHost = editHost;
    this.editInterval = editInterval;
    this.editModemId = editModemId;
    this.editPort = editPort;
    this.spinnerProtocol = spinnerProtocol;
    this.switchSoundReceive = switchSoundReceive;
    this.switchSoundUpload = switchSoundUpload;
    this.switchToasts = switchToasts;
    this.textBaseUrl = textBaseUrl;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonClearUrl;
      Button buttonClearUrl = ViewBindings.findChildViewById(rootView, id);
      if (buttonClearUrl == null) {
        break missingId;
      }

      id = R.id.buttonTestConnection;
      Button buttonTestConnection = ViewBindings.findChildViewById(rootView, id);
      if (buttonTestConnection == null) {
        break missingId;
      }

      id = R.id.editBranchId;
      EditText editBranchId = ViewBindings.findChildViewById(rootView, id);
      if (editBranchId == null) {
        break missingId;
      }

      id = R.id.editHost;
      EditText editHost = ViewBindings.findChildViewById(rootView, id);
      if (editHost == null) {
        break missingId;
      }

      id = R.id.editInterval;
      EditText editInterval = ViewBindings.findChildViewById(rootView, id);
      if (editInterval == null) {
        break missingId;
      }

      id = R.id.editModemId;
      EditText editModemId = ViewBindings.findChildViewById(rootView, id);
      if (editModemId == null) {
        break missingId;
      }

      id = R.id.editPort;
      EditText editPort = ViewBindings.findChildViewById(rootView, id);
      if (editPort == null) {
        break missingId;
      }

      id = R.id.spinnerProtocol;
      Spinner spinnerProtocol = ViewBindings.findChildViewById(rootView, id);
      if (spinnerProtocol == null) {
        break missingId;
      }

      id = R.id.switchSoundReceive;
      Switch switchSoundReceive = ViewBindings.findChildViewById(rootView, id);
      if (switchSoundReceive == null) {
        break missingId;
      }

      id = R.id.switchSoundUpload;
      Switch switchSoundUpload = ViewBindings.findChildViewById(rootView, id);
      if (switchSoundUpload == null) {
        break missingId;
      }

      id = R.id.switchToasts;
      Switch switchToasts = ViewBindings.findChildViewById(rootView, id);
      if (switchToasts == null) {
        break missingId;
      }

      id = R.id.textBaseUrl;
      TextView textBaseUrl = ViewBindings.findChildViewById(rootView, id);
      if (textBaseUrl == null) {
        break missingId;
      }

      return new ActivitySettingsBinding((ScrollView) rootView, buttonClearUrl,
          buttonTestConnection, editBranchId, editHost, editInterval, editModemId, editPort,
          spinnerProtocol, switchSoundReceive, switchSoundUpload, switchToasts, textBaseUrl);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
